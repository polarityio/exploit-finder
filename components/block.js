polarity.export = PolarityComponent.extend({
  // Hides the filter menu by default
  viewFilters: false,
  // This is the initial view limit. The user can view up to 10 by clicking on a "view more" action link
  viewLimit: 5,
  // Stores any error messages from our onMessage hook
  errorMessage: '',
  infoMessage: '',
  details: Ember.computed.alias('block.data.details'),
  searchResults: Ember.computed.alias('details.searchResults'),
  searchInformation: Ember.computed.alias('searchResults.searchInformation'),
  icons: Ember.computed.alias('details.icons'),
  searchFilters: [
    {
      displayValue: 'Github',
      filterValue: 'github.com',
      id: 'github-checkbox',
      value: true
    },
    {
      displayValue: 'Exploit DB',
      filterValue: 'exploit-db.com',
      id: 'exploitdb-checkbox',
      value: true
    },
    {
      displayValue: 'Packet Storm',
      filterValue: 'packetstormsecurity.com',
      id: 'packetstorm-checkbox',
      value: true
    },
    {
      displayValue: 'cxsecurity',
      filterValue: 'cxsecurity.com',
      id: 'cxsecurity-checkbox',
      value: true
    },
    {
      displayValue: 'Security Focus',
      filterValue: 'securityfocus.com',
      id: 'securityfocus-checkbox',
      value: true
    },
    {
      displayValue: 'Rapid7',
      filterValue: 'rapid7.com',
      id: 'rapid7-checkbox',
      value: true
    },
    {
      displayValue: 'Exploit Kitploit',
      filterValue: 'exploit.kitploit.com',
      id: 'exploitkitploit-checkbox',
      value: true
    },
    {
      displayValue: 'Vulnerability Lab',
      filterValue: 'vulnerability-lab.com',
      id: 'vulnerabilitylab-checkbox',
      value: true
    },
    {
      displayValue: 'SecuriTeam',
      filterValue: 'securiteam.com',
      id: 'securiteam-checkbox',
      value: true
    },
    {
      displayValue: '0day.today',
      filterValue: '0day.today',
      id: '0daytoday-checkbox',
      value: true
    }
  ],
  init: function () {
    this._super(...arguments);
    this.set('numSourcesToSearch', this.searchFilters.length);
  },
  actions: {
    toggleFilter: function () {
      this.toggleProperty('viewFilters');
    },
    applyFilter: function () {
      this.set('errorMessage', '');
      this.set('infoMessage', '');

      const numSourcesToSearch = this.getNumSourcesSearched();
      if (numSourcesToSearch === 0) {
        this.set('infoMessage', 'Select at least one source to search');
        return;
      }
      this.set('filtering', true);
      const payload = {
        entity: this.block.entity,
        searchFilters: this.searchFilters
      };

      this.sendIntegrationMessage(payload)
        .then((searchResults) => {
          this.set('block.data.details.searchResults', searchResults);
        })
        .catch((err) => {
          console.error(err);
          if (typeof err.meta === 'string') {
            this.set('errorMessage', err.meta);
          } else if (typeof err.meta === 'object' && typeof err.meta.error === 'string') {
            this.set('errorMessage', err.meta.error);
          } else if (typeof err.meta === 'object' && typeof err.meta.detail === 'string') {
            this.set('errorMessage', err.meta.detail);
          } else {
            this.set('errorMessage', JSON.stringify(err.meta));
          }
        })
        .finally(() => {
          this.set('numSourcesToSearch', numSourcesToSearch);
          this.set('filtering', false);
        });
    },
    selectAll: function () {
      for (let i = 0; i < this.searchFilters.length; i++) {
        this.set(`searchFilters.${i}.value`, true);
      }
    },
    clearAll: function () {
      for (let i = 0; i < this.searchFilters.length; i++) {
        this.set(`searchFilters.${i}.value`, false);
      }
    },
    viewMore: function () {
      this.set('viewLimit', 10);
    }
  },
  getNumSourcesSearched() {
    let numSourcesToSearch = 0;
    for (let i = 0; i < this.searchFilters.length; i++) {
      if (this.searchFilters[i].value === true) {
        ++numSourcesToSearch;
      }
    }
    return numSourcesToSearch;
  }
});
